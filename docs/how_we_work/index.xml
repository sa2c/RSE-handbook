<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>How We Work on RSE Handbook</title><link>https://sa2c.github.io/RSE-handbook/docs/how_we_work/</link><description>Recent content in How We Work on RSE Handbook</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><atom:link href="https://sa2c.github.io/RSE-handbook/docs/how_we_work/index.xml" rel="self" type="application/rss+xml"/><item><title>Code Review</title><link>https://sa2c.github.io/RSE-handbook/docs/how_we_work/code_review/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sa2c.github.io/RSE-handbook/docs/how_we_work/code_review/</guid><description>Code Review # Code reviews are used by most sucessful tech companies and generally propagated as a useful tool for several reasons:
Better code quality Learning effects for the coder and the reviewer Increasing the lottery factor There are numerous discussions and opinions of good code reviews out there in every imaginable way of presentation (see &amp;hellip;) but as code reviews are practically non-existent in our group at the time of writing, this document shall only provide some very simple guidelines that can be expanded on when the basics are established.</description></item><item><title>Defining Project Doneness</title><link>https://sa2c.github.io/RSE-handbook/docs/how_we_work/defining_done/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sa2c.github.io/RSE-handbook/docs/how_we_work/defining_done/</guid><description>Defining Project Doneness # As a Research Software Engineer, we often join a collaborative project when a code base already exists. Defining the aims of a collaboration can be challenging, and when there is limited time it is important to apply attention in the right places.
Current status # To the best of my knowledge, we don&amp;rsquo;t currently have a standardised procedure to measure project aims and &amp;ldquo;doneness&amp;rdquo;.
Proposed changes # The following document is directly taken over from the REG Handbook by the Alan Turing Institute.</description></item><item><title>Knowledge Sharing</title><link>https://sa2c.github.io/RSE-handbook/docs/how_we_work/knowledge_sharing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sa2c.github.io/RSE-handbook/docs/how_we_work/knowledge_sharing/</guid><description>Knowledge Sharing # This page lists the tools, resources and activities that this team has to promote general communication as well as sharing and gaining knowledge across the team and the university as a whole, and some thoughts on what we could try to improve this. f you’re looking to learn something new, get help with a problem, share something cool you’ve been doing, or find out what others in the team are doing, the list below may give an idea of where to look/what to try.</description></item><item><title>Meeting Records</title><link>https://sa2c.github.io/RSE-handbook/docs/how_we_work/meeting_record/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sa2c.github.io/RSE-handbook/docs/how_we_work/meeting_record/</guid><description>Meeting Records # Current process # There is currently no standardised method of taking and curating meeting records. For collaborative notes, we sometimes use shared MS Word documents and for asynchronous sharing git(hub/lab) repositories.
Proposed changes # We could introduce a more standardised method and the REG Handbook proposes one way to do so. However, we should probably be careful which meetings could benefit from this precisely because for our very small team meetings are usually only one or two people who can probably coordinate better between themselves.</description></item></channel></rss>